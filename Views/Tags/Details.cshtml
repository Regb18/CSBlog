@model CSBlog.Models.Tag

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

@using CSBlog.Enums;
@using CSBlog.Services.Interfaces
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@{
    int pageSize = 4;
    int pageNum = ViewBag.Page;

    IPagedList<BlogPost> pageOfPosts = Model.BlogPosts
                                            .Where(b => b.IsPublished == true && b.IsDeleted == false)
                                            .ToPagedList(pageNum, pageSize);
}

<!-- Start Tag Area  -->
<div class="axil-author-area axil-author-banner bg-color-grey">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="about-author">
                    <div class="media">
                        <div class="media-body">
                            <div class="author-info">
                                <h1 class="title"><a href="#">Tag: @Model.Name</a></h1>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- End Tag Area  -->
<!-- Start Post List Wrapper  -->
<div class="axil-post-list-area axil-section-gap bg-color-white">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="page-title">
                    <h2 class="title mb--40">Articles in @Model.Name</h2>
                </div>
            </div>
            <div class="col-lg-8 col-xl-8">
                @*For each BlogPost*@

                @foreach (BlogPost blogPost in pageOfPosts)
                {
                    <!-- Start Post List  -->
                    <partial name="_BlogCard" model="@blogPost" />
                    <!-- End Post List  -->
                }

                <div>
@*                    <div>
                        Page @(Model.Posts < blogPost.PageNumber ? 0 : blogPost.PageNumber) of @blogPost.PageCount
                    </div>*@
                    <!-- pageNum will refer to the name in the controller  /  Url.Action creates a URL, the stuff in the brackets is just the order they'll show -->
                    @Html.PagedListPager(pageOfPosts, pageNum => Url.Action("Details", new {  id = Model.Id, pageNum }),
                    new PagedListRenderOptions
                    {
                    LiElementClasses = new string[] { "my-page-item" },
                    PageClasses = new string[] { "my-page-link" },
                    })


                </div>

            </div>
            <div class="col-lg-4 col-xl-4 mt_md--40 mt_sm--40">
                <!-- Start Sidebar Area  -->
                <partial name="_SideBarArea" />
                <!-- End Sidebar Area  -->
            </div>
        </div>
    </div>
</div>
<!-- End Post List Wrapper  -->